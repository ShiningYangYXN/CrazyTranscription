# Mapping
latinGreek = {
     'A': 'Α', 'a': 'α', 
     'B': 'Β', 'b': 'β', 
     'C': 'Ξ', 'c': 'ξ', 
     'D': 'Δ', 'd': 'δ', 
     'E': 'Ε', 'e': 'ε', 
     'F': 'Φ', 'f': 'φ', 
     'G': 'Γ', 'g': 'γ', 
     'H': 'Η', 'h': 'η', 
     'I': 'Ι', 'i': 'ι', 
     'J': 'Ψ', 'j': 'ψ', 
     'K': 'Κ', 'k': 'κ', 
     'L': 'Λ', 'l': 'λ', 
     'M': 'Μ', 'm': 'μ', 
     'N': 'Ν', 'n': 'ν', 
     'O': 'Ο', 'o': 'ο', 
     'P': 'Π', 'p': 'π', 
     'Q': 'Θ', 'q': 'θ', 
     'R': 'Ρ', 'r': 'ρ', 
     'S': 'Σ', 's': 'σ', 
     'T': 'Τ', 't': 'τ', 
     'U': 'Υ', 'u': 'υ', 
     'V': 'Ν', 'v': 'ν', 
     'W': 'Ω', 'w': 'ω', 
     'X': 'Χ', 'x': 'χ', 
     'Y': 'Υ', 'y': 'υ', 
     'Z': 'Ζ', 'z': 'ζ'
}

latinCyrillic = {
     'A': 'А', 'a': 'а', 
     'B': 'Б', 'b': 'б', 
     'C': 'С', 'c': 'с', 
     'D': 'Д', 'd': 'д', 
     'E': 'Е', 'e': 'е', 
     'F': 'Ф', 'f': 'ф', 
     'G': 'Г', 'g': 'г', 
     'H': 'Х', 'h': 'х', 
     'I': 'И', 'i': 'и', 
     'J': 'Й', 'j': 'й', 
     'K': 'К', 'k': 'к', 
     'L': 'Л', 'l': 'л', 
     'M': 'М', 'm': 'м', 
     'N': 'Н', 'n': 'н', 
     'O': 'О', 'o': 'о', 
     'P': 'П', 'p': 'п', 
     'Q': 'КУ', 'q': 'ку', 
     'R': 'Р', 'r': 'р', 
     'S': 'С', 's': 'с', 
     'T': 'Т', 't': 'т', 
     'U': 'У', 'u': 'у', 
     'V': 'В', 'v': 'в', 
     'W': 'Ш', 'w': 'ш', 
     'X': 'Х', 'x': 'х', 
     'Y': 'Ы', 'y': 'ы', 
     'Z': 'З', 'z': 'з'
}

latinArabic = {
     'A': 'أ', 'a': 'أ',
     'B': 'ب', 'b': 'ب',
     'C': 'ج', 'c': 'ج',
     'D': 'د', 'd': 'د',
     'E': 'ه', 'e': 'ه',
     'F': 'و', 'f': 'و',
     'G': 'ز', 'g': 'ز',
     'H': 'ح', 'h': 'ح',
     'I': 'ط', 'i': 'ط',
     'J': 'ي', 'j': 'ي',
     'K': 'ك', 'k': 'ك',
     'L': 'ل', 'l': 'ل',
     'M': 'م', 'm': 'م',
     'N': 'ن', 'n': 'ن',
     'O': 'س', 'o': 'س',
     'P': 'ع', 'p': 'ع',
     'Q': 'ق', 'q': 'ق',
     'R': 'ر', 'r': 'ر',
     'S': 'س', 's': 'س',
     'T': 'ت', 't': 'ت',
     'U': 'ؤ', 'u': 'ؤ',
     'V': 'ث', 'v': 'ث',
     'W': 'و', 'w': 'و',
     'X': 'خ', 'x': 'خ',
     'Y': 'ي', 'y': 'ي',
     'Z': 'ز', 'z': 'ز'
}

latinHebrew = {
     'A': 'א', 'a': 'א',
     'B': 'ב', 'b': 'ב',
     'C': 'ג', 'c': 'ג', 
     'D': 'ד', 'd': 'ד',
     'E': 'ה', 'e': 'ה',
     'F': 'ו', 'f': 'ו', 
     'G': 'ז', 'g': 'ז',
     'H': 'ח', 'h': 'ח',
     'I': 'י', 'i': 'י',
     'J': 'י', 'j': 'י', 
     'K': 'כ', 'k': 'כ',
     'L': 'ל', 'l': 'ל',
     'M': 'מ', 'm': 'מ',
     'N': 'נ', 'n': 'נ',
     'O': 'ו', 'o': 'ו', 
     'P': 'פ', 'p': 'פ',
     'Q': 'ק', 'q': 'ק', 
     'R': 'ר', 'r': 'ר',
     'S': 'ס', 's': 'ס',
     'T': 'ת', 't': 'ת',
     'U': 'ו', 'u': 'ו',
     'V': 'ו', 'v': 'ו', 
     'W': 'ו', 'w': 'ו',
     'X': 'קס', 'x': 'קס', 
     'Y': 'י', 'y': 'י',
     'Z': 'ז', 'z': 'ז'
}

latinSanskrit = {
     'A': 'अ', 'a': 'अ',
     'B': 'ब', 'b': 'ब',
     'C': 'च', 'c': 'च',
     'D': 'द', 'd': 'द',
     'E': 'ए', 'e': 'ए',
     'F': 'फ', 'f': 'फ',
     'G': 'ग', 'g': 'ग',
     'H': 'ह', 'h': 'ह',
     'I': 'इ', 'i': 'इ',
     'J': 'ज', 'j': 'ज',
     'K': 'क', 'k': 'क',
     'L': 'ल', 'l': 'ल',
     'M': 'म', 'm': 'म',
     'N': 'न', 'n': 'न',
     'O': 'ओ', 'o': 'ओ',
     'P': 'प', 'p': 'प',
     'Q': 'क्', 'q': 'क्',
     'R': 'र', 'r': 'र',
     'S': 'स', 's': 'स',
     'T': 'त', 't': 'त',
     'U': 'उ', 'u': 'उ',
     'V': 'व', 'v': 'व',
     'W': 'व', 'w': 'व',
     'X': 'क्स', 'x': 'क्स',
     'Y': 'य', 'y': 'य',
     'Z': 'ज', 'z': 'ज',
}

latinTibetan = {
    'A': 'ཨ', 'a': 'ཨ',
    'B': 'བ', 'b': 'བ',
    'C': 'ཀ', 'c': 'ཀ',
    'D': 'ད', 'd': 'ད',
    'E': 'ཾ', 'e': 'ཾ',
    'F': 'ཕ', 'f': 'ཕ',
    'G': 'ག', 'g': 'ག',
    'H': 'ཧ', 'h': 'ཧ',
    'I': 'ཨ', 'i': 'ཨ',
    'J': 'ཇ', 'j': 'ཇ',
    'K': 'ཀ', 'k': 'ཀ',
    'L': 'ལ', 'l': 'ལ',
    'M': 'མ', 'm': 'མ',
    'N': 'ན', 'n': 'ན',
    'O': 'ཨ', 'o': 'ཨ',
    'P': 'པ', 'p': 'པ',
    'Q': 'ཁ', 'q': 'ཁ',
    'R': 'ར', 'r': 'ར',
    'S': 'ས', 's': 'ས',
    'T': 'ཏ', 't': 'ཏ',
    'U': 'ཨ', 'u': 'ཨ',
    'V': 'ཝ', 'v': 'ཝ',
    'W': 'ဝ', 'w': 'ဝ',
    'X': 'ཁ', 'x': 'ཁ',
    'Y': 'ཡ', 'y': 'ཡ',
    'Z': 'ཛ', 'z': 'ཛ'
}

# Class Definition

class LatinTranscriber():
     Mapper={}
     def __init__(self, rule:dict):
          self.Mapper=rule
     def Transcribe(self, text:str):
          for i in self.Mapper:
               text=text.replace(i, str(self.Mapper.get(i)))
          return text
     def Detranscribe(self, text:str):
          pass
